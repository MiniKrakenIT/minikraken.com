# Default values for minikraken.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: minikraken/private
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "minikraken-0.0.20"

secretEnvs:
  - BETTERSTACK_TOKEN
  - PUBLIC_CLOUDFLARE_TUNSTILE_SITE_KEY
  - CLOUDFLARE_TUNSTILE_TOKEN

env:
  - name: XFF_DEPTH
    value: 1
  - name: LOG_LEVEL
    value: info
  - name: ORIGIN
    value: https://dev.minikraken.com
  - name: PROTOCOL_HEADER
    value: x-forwarded-proto
  - name: HOST_HEADER
    value: x-forwarded-host
  - name: ADDRESS_HEADER
    value: x-forwarded-for

imagePullSecrets:
  - name: registry-3
nameOverride: ""
fullnameOverride: "minikraken-site"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "minikraken-sa"

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 65534

securityContext:
  capabilities:
    drop:
    - ALL
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 50m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /api/health
    port: http
    httpHeaders:
      - name: x-forwarded-for
        value: kubernetes
readinessProbe:
  httpGet:
    path: /api/health
    port: http
    httpHeaders:
      - name: x-forwarded-for
        value: kubernetes

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: app
    emptyDir:
      medium: Memory
      sizeLimit: 10Mi

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - mountPath: /app
    name: app
    readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
