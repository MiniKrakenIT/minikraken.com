name: Build Application

on:
  pull_request:
    branches:
      - main
#      - release/*
  workflow_dispatch:
permissions:
  contents: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7
      with:
        fetch-depth: 0
    - name: Cache
      uses: actions/cache@v4.0.2
      with:
        path: |
          node_modules/
          .svelte-kit/
        key: minikraken-cache
    - name: git config
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
    - name: Get the version
      run: |
        bun install --frozen-lockfile
        export VERSION=$(bunx release-it --release-version)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
    - name: Build application
      run: bun run build
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.3.0
    - name: Docker Login
      uses: docker/login-action@v3.2.0
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    - name: Build docker image
      uses: docker/build-push-action@v6.2.0
      with:
        file: ./.deployment/Dockerfile
        context: .
        push: true
        #sbom: # optional
        tags: minikraken/private:minikraken-${{ env.VERSION }}
        cache-from: type=registry,ref=minikraken/private:minikraken-cache
        cache-to: type=registry,ref=minikraken/private:minikraken-cache,mode=max,compression=zstd
    - name: Release new version
      run: bunx release-it --ci
    - name: Deploy new version
      uses: benc-uk/workflow-dispatch@v1.2.3
      with:
        workflow: Update-Version.yml
        token: ${{ secrets.WORKFLOW_TOKEN }}
        repo: MiniKrakenIT/infrastructure
        inputs: '{"application": "Minikraken", "environment": "development", "version": "${{ env.VERSION }}"}'
