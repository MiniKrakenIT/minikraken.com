name: Build Application

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7
      with:
        fetch-depth: 0
      #todo add back git config for release-it
    - name: Set bun cache dir
      run: echo "[install.cache]\ndir = \".bun/install/cache\"" > bunfig.toml
    - name: Restore bun cache
      id: restore-bun-cache
      uses: actions/cache/restore@v4
      with:
        path: |
          ./.bun/install/cache
        key: bun-cache
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
    - name: Get the version
      run: |
        bun install --frozen-lockfile
        export VERSION=$(bunx release-it --release-version)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
    - name: Save Bun cache
      id: bun-cache-save
      uses: actions/cache/save@v4
      with:
        path: |
          ./.bun/install/cache
        key: ${{ steps.restore-bun-cache.outputs.cache-primary-key }}
    - name: check if version variable works
      run: echo $VERSION
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.3.0
    - name: Docker Login
      uses: docker/login-action@v3.2.0
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    - name: Build docker image
      uses: docker/build-push-action@v6.2.0
      with:
        file: ./.deployment/Dockerfile
        context: .
        push: true
        #sbom: # optional
        tags: minikraken/private:minikraken-${{ env.VERSION }}
        cache-from: type=registry,ref=minikraken/private:minikraken-cache-${{ env.VERSION }}
        cache-to: type=registry,ref=minikraken/private:minikraken-cache-${{ env.VERSION }},mode=max,compression=zstd
